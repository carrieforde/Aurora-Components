/// Add an [optional] project prefix (or namespace) to all CSS classes.
///
/// @type String
///
/// @example - scss Usage
///  $project-prefix: cf;
///
/// @example - css Output
///  .cf-text-primary {}
///
/// @example - markup Usage
///  <h1 class="cf-text-primary"></h1>

$project-prefix: ''; // if using, include a dash at the end.

/// Top prefix used in box-model classes.
$top: t;

/// Right prefix used in box-model classes.
$right: r;

/// Bottom prefix used in box-model classes.
$bottom: b;

/// Left prefix used in box-model classes.
$left: l;

/// Horizontal (x-asis) prefix used in box-model classes.
$horizontal: h;

/// Vertical (y-axis) prefix used in box-model classes.
$vertical: v;

/// Prefixes for generating color classes. Leave properties on left, and only update values on right. If classes aren't needed, delete property value pair as needed.
///
/// @type Map 
$color-prefixes: (
	color: text,
	background-color: bg,
	fill: fill
);

/// Define theme / site colors here. Colors are used to generate background, color, and fill classes.
///
/// @type Map
$colors: (
	primary: #e5346c,
	secondary: #eac5de,
	black: #000,
	dark-gray: #333,
	mid-dark-gray: #666,
	mid-gray: #999,
	mid-light-gray: #ccc,
	light-gray: #eee,
	white: #fff,
	info: #0075c4,
	success: #04be51,
	warning: #ffc417,
	danger: #ff3505
);

/// Define theme / site fonts here. Fonts are used to generate font-family classes.
///
/// @type Map
///
/// @example - css Sample Output
///  .serif { Georgia, times, serif; }
$font-families: (
	sans-serif: #{-apple-system, BlinkMacSystemFont, 'avenir next', avenir, helvetica, 'helvetica neue', ubuntu, roboto, noto, 'segoe ui', arial, sans-serif},
	serif: #{Georgia, times, serif},
	monospace: #{Consolas, monaco, monospace}
);

/// Define theme / site font sizes. Use any unit of measure desired.
///
/// @type Map
///
/// @example - css Sample Output
///  .font-h1 { font-size: 2.25rem; }
$font-sizes: (
	default: 1rem,
	h1: 2.25rem,
	h2: 2rem,
	h3: 1.5rem,
	h4: 1.25rem,
	h5: 1rem,
	h6: 0.75rem
);

/// Define font weights.
///
/// @type Map
///
/// @example - css Sample Output
///  .font-bold { font-weight: 700; }
$font-weights: (
	hairline: 100,
	thin: 200,
	light: 300,
	normal: 400,
	medium: 500,
	semibold: 600,
	bold: 700,
	extrabold: 800,
	black: 900
);

/// Define line height (leading).
///
/// @type Map
///
/// @example - css Sample Output
///  .lh-none { line-height: 1; }
$line-heights: (
	none: 1,
	tight: 1.25,
	normal: 1.6,
	loose: 2
);

/// Define letter-spacing (tracking). Any unit of measure may be used, but `em`s are recommended for scalability.
///
/// @type Map
///
/// @example - css Sample Output
///  .ls-wide { letter-spacing: 0.05em; }
$letter-spacing: (
	tight: 0.05em,
	normal: 0,
	wide: 0.05em
);

//-----------------------------------------
// Display
//-----------------------------------------
$display-prefixes: '';

$flexbox-prefixes: (
	align-content: ac,
	align-items: ai,
	align-self: as,
	justify-content: jc
);

//-----------------------------------------
// Border
//-----------------------------------------
$border-prefix: b;

$border-sizes: (
	thin: 1px,
	medium: 2px,
	thick: 3px,
	x-thick: 10px
);

//-----------------------------------------
// Margin
//-----------------------------------------
$margin-prefix: m;

$margin-sizes: (
	auto: auto,
	0: 0,
	5: 0.3125rem,
	10: 0.625rem,
	20: 1.25rem,
	40: 2.5rem,
	60: 3.75rem,
	80: 5rem,
	100: 62.5rem
);

//-----------------------------------------
// Padding
//-----------------------------------------
$padding-prefix: p;

$padding-sizes: (
	0: 0,
	5: 0.3125rem,
	10: 0.625rem,
	20: 1.25rem,
	40: 2.5rem,
	60: 3.75rem,
	80: 5rem,
	100: 62.5rem
);

//-----------------------------------------
// Breakpoints
//-----------------------------------------
$breakpoint-prefix: ''; // should include a dash if using

$breakpoints: (
	'sm': 600px,
	'm': 900px,
	'lg': 1200px,
	'xl': 1800px
);

//-----------------------------------------
// Widths
//-----------------------------------------
$width-prefixes: (
	max-width: max-w,
	min-width: min-w,
	width: w
);

$widths: (
	0: 0,
	content: 1100px,
	full: 100%,
	screen: 100vw
);

//-----------------------------------------
// Heights
//-----------------------------------------
$height-prefixes: (
	height: h,
	max-height: max-h,
	min-height: min-h
);

$heights: (
	0: 0,
	full: 100%,
	screen: 100vh
);

//-----------------------------------------
// Transitions
//-----------------------------------------
$transition-prefix: trs;

$transition-duration: 0.3s;

$transition-timing: ease-in-out;

$transition-properties: (
	all: all,
	color: c,
	max-height: mh,
	opacity: o
);
